<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd">

	<cache:annotation-driven cache-manager="redisCacheManager"/>
	
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
		<!-- 默认无过期时间 -->
		<!-- <property name="defaultExpiration" value="1000"/> -->
		<!-- 默认不使用前缀 -->
		<property name="usePrefix" value="true"/>
		<!-- 独立设置指定缓存集下的过期时间 -->
		<property name="expires">
			<map>
				<!-- 产品信息缓存过期时间为1小时 -->
				<entry key="productInfoCache" value="3600"/>
			</map>
		</property>
	</bean>
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.max.idle}" />
		<property name="maxTotal" value="${redis.max.active}" />
		<property name="maxWaitMillis" value="${redis.max.wait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="port" value="${redis.server.port}" />
		<property name="hostName" value="${redis.server.ip}" />
		<property name="password" value="${redis.server.password}" />
		<property name="timeout" value="${redis.connect.timeout}" />
		<property name="database" value="${redis.database.index}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="stringSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
		<property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
        </property>
	</bean>
	<bean id="redisBaseDAO" class="com.hundsun.cprs.commonservice.common.redis.dao.RedisGeneratorDAO">
		<property name="redisTemplate">
			<ref bean="redisTemplate" />
		</property>
	</bean>

	<bean id="jedisCacheTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />
</beans>